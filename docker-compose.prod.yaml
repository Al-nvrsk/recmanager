version: '3.9'

services:
  nginx:
    container_name: nginx
    restart: always
    env_file: ./.env
    tty: true
    build:
      context: .
      dockerfile: ./docker/Dockerfile.nginx
    ports:
      - '8008:80'
      # - '443:443'
    environment:
      SERVER_NAME: ${SERVER_NAME}
    networks:
      - dockernetwork

  # nginx:
  #   image: nginx:alpine
  #   container_name: nginx
  #   restart: always
  #   volumes:
  #     - ./apps/client/dist:/app/
  #     - ./apps/client/nginx.conf:/etc/nginx/nginx.conf
  #   ports:
  #     - '3003:80'
  #   networks:
  #     - dockernetwork

  server:
    container_name: server
    image: server
    env_file: ./.env
    build:
      context: .
      dockerfile: ./docker/Dockerfile.server
      args:
        SERVER_PORT: ${SERVER_PORT}
    restart: always
    ports:
      - '${SERVER_PORT}:${SERVER_PORT}'
    environment:
      SERVER_PORT: ${SERVER_PORT}
    networks:
      - dockernetwork
    depends_on:
      - db

  db:
    container_name: db
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    env_file: /.env
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB}
    volumes:
      - ./tmp/mysql:/var/lib/mysql
    ports:
      - ${MYSQL_PORT}:3306
    networks:
      - dockernetwork

networks:
  dockernetwork:
    driver: bridge

